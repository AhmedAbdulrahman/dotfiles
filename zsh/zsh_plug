#!/usr/bin/env zsh
#=============================================================================
#  Author: Ahmed Abdulrahman
#  Email: a.kasapbashi@gmail.com
#  Created: 2018-12-16 16:20
#=============================================================================

# Plugin manager
export ZPLUG_THREADS=32

# * zplug
ZPLUG_HOME=${HOME}/.zplug

# Check If zplug doesn't exist, install it
if [[ ! -d ${ZPLUG_HOME} ]]; then
  git clone https://github.com/zplug/zplug $ZPLUG_HOME
  source $ZPLUG_HOME/init.zsh
fi

# Essential
source $ZPLUG_HOME/init.zsh

zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# No need to load it when in ssh session
[ "$SSH_CLIENT" ] || zplug "plugins/web-search",    from:oh-my-zsh, hook-load:"unalias map &>/dev/null"
[ "$SSH_CLIENT" ] || zplug 'wfxr/fzf-chrome-marks', as:command,     use:'b'

# ------------------------------------------------------------------------------
# Dependencies
# ------------------------------------------------------------------------------

# Oh-My-Zsh plugins
# Git alias. See: https://github.com/robbyrussell/oh-my-zsh/wiki/Plugin:git
zplug "plugins/git", from:oh-my-zsh
# Git completions. On OS X with Homebrew, you need to install git with brew install git --without-completions. Otherwise, git's _git will take precedence, and you won't see the completions for git-extras commands.
zplug "plugins/git-extras", from:oh-my-zsh
zplug "plugins/npm", from:oh-my-zsh
zplug "plugins/yarn", from:oh-my-zsh
zplug "plugins/nvm", from:oh-my-zsh
zplug "plugins/extract", from:oh-my-zsh

zplug "plugins/colored-man-pages", from:oh-my-zsh
zplug "plugins/sudo", from:oh-my-zsh
zplug "morhetz/gruvbox", use:"gruvbox_256palette.sh"

# Spaceship ZSH
zplug "denysdovhan/spaceship-prompt", as:theme, use:"spaceship.zsh"

# Zsh improvements
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-completions"
zplug "hlissner/zsh-autopair", defer:2
zplug "zsh-users/zsh-history-substring-search"

bindkey '^[[A' history-substring-search-up;
bindkey '^[[B' history-substring-search-down;

zplug "zsh-users/zsh-autosuggestions"
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS=(forward-word forward-char)
ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=(end-of-line)

zplug 'so-fancy/diff-so-fancy', \
    as:command, use:diff-so-fancy, \
    hook-build:'git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"'

zplug 'wfxr/iconful', as:command, use:'(iconful).sh', rename-to:'$1'
zplug 'wfxr/forgit', defer:1
FORGIT_FZF_DEFAULT_OPTS="
--height '80%'
"

# jq is a lightweight and flexible command-line JSON processor.
(( $+commands[jq] )) || zplug "stedolan/jq", as:command, from:gh-r, rename-to:jq

# httpstat visualizes curl(1) statistics in a way of beauty and clarity.
zplug "reorx/httpstat", \
    as:command, \
    use:'(httpstat).py', \
    rename-to:'$1'

# Extra
zplug "lukechilds/zsh-better-npm-completion", defer:2
zplug "denysdovhan/gitio-zsh", as:command, use:"gitio.zsh", rename-to:"gitio"
zplug "rauchg/wifi-password", as:command, use:"wifi-password.sh", rename-to:"wifi-password"
zplug "marzocchi/zsh-notify", from:github
zplug "changyuheng/fz", defer:1
zplug "rupa/z", use:z.sh
zplug "djui/alias-tips"
zplug "Valiev/almostontop"

# ** apply zplug
# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    read -q && echo && zplug install
fi

# Then, source plugins and add commands to $PATH
zplug load