#!/usr/bin/env zsh
#=============================================================================
#  Author: Ahmed Abdulrahman
#  Email: a.kasapbashi@gmail.com
#  Created: 2018-12-16 16:20
#=============================================================================

# Plugin manager
export ZPLUG_THREADS=32

# Source zplug manager (https://github.com/zplug/zplug)
source "$DOTFILES/zsh/plugins/zplug/init.zsh"

zplug 'zplug/zplug', hook-build:'zplug --self-manage'

# No need to load it when in ssh session
[ "$SSH_CLIENT" ] || zplug 'wfxr/fzf-chrome-marks', as:command,     use:'b'

# ------------------------------------------------------------------------------
# Dependencies
# ------------------------------------------------------------------------------

# Oh-My-Zsh plugins
# Git alias. See: https://github.com/robbyrussell/oh-my-zsh/wiki/Plugin:git
zplug "plugins/git", from:oh-my-zsh
# Git completions. On OS X with Homebrew, you need to install git with brew install git --without-completions. Otherwise, git's _git will take precedence, and you won't see the completions for git-extras commands.
zplug "plugins/git-extras", from:oh-my-zsh
zplug 'plugins/git-flow-avh', from:oh-my-zsh
(( $+commands[mvn]        )) && zplug "plugins/mvn",        from:oh-my-zsh, lazy:yes
(( $+commands[docker]     )) && zplug "plugins/docker",     from:oh-my-zsh, lazy:yes
(( $+commands[tmuxinator] )) && zplug "plugins/tmuxinator", from:oh-my-zsh, lazy:yes
(( $+commands[gem]        )) && zplug "plugins/gem",        from:oh-my-zsh, lazy:yes
(( $+commands[lein]       )) && zplug 'plugins/lein',       from:oh-my-zsh, lazy:yes
zplug "plugins/npm", from:oh-my-zsh
zplug "plugins/yarn", from:oh-my-zsh
zplug "plugins/nvm", from:oh-my-zsh
zplug "plugins/extract", from:oh-my-zsh

zplug "plugins/colored-man-pages", from:oh-my-zsh
# zplug "plugins/sudo", from:oh-my-zsh
zplug "morhetz/gruvbox", use:"gruvbox_256palette.sh"

# Spaceship ZSH
zplug "denysdovhan/spaceship-prompt", as:theme, use:"spaceship.zsh"

# Zsh improvements
zplug "zsh-users/zsh-syntax-highlighting", defer:2
typeset -ga ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)
typeset -gA ZSH_HIGHLIGHT_STYLES
# main
ZSH_HIGHLIGHT_STYLES[unknown-token]='fg=red'
ZSH_HIGHLIGHT_STYLES[reserved-word]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[alias]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[suffix-alias]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[builtin]='fg=green,underline'
ZSH_HIGHLIGHT_STYLES[function]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[command]='fg=green'
ZSH_HIGHLIGHT_STYLES[precommand]='fg=green,underline'
ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[hashed-command]='fg=green,italic'
ZSH_HIGHLIGHT_STYLES[path]='fg=magenta'
ZSH_HIGHLIGHT_STYLES[path_pathseparator]='fg=magenta'
ZSH_HIGHLIGHT_STYLES[path_prefix]='none'
ZSH_HIGHLIGHT_STYLES[path_prefix_pathseparator]='none'
ZSH_HIGHLIGHT_STYLES[globbing]='bg=black'
ZSH_HIGHLIGHT_STYLES[history-expansion]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='none'
ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='none'
ZSH_HIGHLIGHT_STYLES[back-quoted-argument]='fg=magenta'
ZSH_HIGHLIGHT_STYLES[single-quoted-argument]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[double-quoted-argument]='fg=yellow'
ZSH_HIGHLIGHT_STYLES[dollar-quoted-argument]='fg=blue'
ZSH_HIGHLIGHT_STYLES[dollar-double-quoted-argument]='fg=blue'
ZSH_HIGHLIGHT_STYLES[back-double-quoted-argument]='fg=blue'
ZSH_HIGHLIGHT_STYLES[back-dollar-quoted-argument]='fg=blue'
ZSH_HIGHLIGHT_STYLES[assign]='none,underline'
ZSH_HIGHLIGHT_STYLES[redirection]='fg=cyan'
ZSH_HIGHLIGHT_STYLES[comment]='fg=black'
ZSH_HIGHLIGHT_STYLES[arg0]='default'

# brackets
ZSH_HIGHLIGHT_STYLES[cursor-matchingbracket]='bg=black'

zplug "zsh-users/zsh-completions"
zplug "hlissner/zsh-autopair", defer:2
zplug "zsh-users/zsh-history-substring-search"

bindkey '^[[A' history-substring-search-up;
bindkey '^[[B' history-substring-search-down;

zplug "zsh-users/zsh-autosuggestions"
ZSH_AUTOSUGGEST_PARTIAL_ACCEPT_WIDGETS=(vi-forward-word)
ZSH_AUTOSUGGEST_ACCEPT_WIDGETS=(vi-forward-char)
ZSH_AUTOSUGGEST_EXECUTE_WIDGETS=()
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=8'
ZSH_AUTOSUGGEST_ORIGINAL_WIDGET_PREFIX='autosuggest-orig-'
ZSH_AUTOSUGGEST_STRATEGY=('history')
ZSH_AUTOSUGGEST_CLEAR_WIDGETS=(
		history-search-forward
		history-search-backward
		history-beginning-search-forward
		history-beginning-search-backward
		history-substring-search-up
		history-substring-search-down
		up-line-or-beginning-search
		down-line-or-beginning-search
		up-line-or-history
		down-line-or-history
		accept-line
	)
ZSH_AUTOSUGGEST_IGNORE_WIDGETS=(
		orig-\*
		beep
		run-help
		set-local-history
		which-command
		yank
		yank-pop
	)

zplug 'soimort/translate-shell', at:'develop'

zplug 'so-fancy/diff-so-fancy', \
    as:command, use:diff-so-fancy, \
    hook-build:'git config --global core.pager "diff-so-fancy | less --tabs=4 -RFX"'

zplug 'b4b4r07/zplug-doctor', lazy:yes
zplug 'wfxr/zplug-rm', lazy:yes
zplug 'wfxr/iconful', as:command, use:'(iconful).sh', rename-to:'$1'
zplug 'wfxr/forgit', defer:1
forgit_log=log
forgit_diff=diff
forgit_add=add
forgit_reset_head=grh
forgit_ignore=ignore
forgit_restore=cof
forgit_stash_show=stash
FORGIT_FZF_DEFAULT_OPTS="
--height '80%'
"

zplug "wfxr/emoji-cli", as:command, use:'emojify|fuzzy-emoji'

# jq is a lightweight and flexible command-line JSON processor.
(( $+commands[jq] )) || zplug "stedolan/jq", as:command, from:gh-r, rename-to:jq

# httpstat visualizes curl(1) statistics in a way of beauty and clarity.
zplug "reorx/httpstat", \
    as:command, \
    use:'(httpstat).py', \
    rename-to:'$1'

# Extra
zplug "lukechilds/zsh-better-npm-completion", defer:2
zplug "denysdovhan/gitio-zsh", as:command, use:"gitio.zsh", rename-to:"gitio"
zplug "rauchg/wifi-password", as:command, use:"wifi-password.sh", rename-to:"wifi-password"
zplug "marzocchi/zsh-notify", from:github
zplug "changyuheng/fz", defer:1
zplug "rupa/z", use:z.sh
zplug "djui/alias-tips"
zplug "Valiev/almostontop"

# ** apply zplug
# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    read -q && echo && zplug install
fi

# Then, source plugins and add commands to $PATH
zplug load