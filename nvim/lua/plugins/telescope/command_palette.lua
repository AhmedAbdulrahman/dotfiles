local command_palette = {
  {
    "File",
    { "Entire selection",           ":call feedkeys('GVgg')" },
    { "Yank Current File Name",     ":lua require('utils.functions').yank_current_file_name()" },
    { "Write Current Buffer",       ":w" },
    { "Write All Buffers",          ":wa" },
    { "Quit",                       ":qa" },
    { "File Browser",               ":lua require'telescope'.extensions.file_browser.file_browser()", 1},
    { "Search for Word",            ":lua require('telescope.builtin').live_grep()", 1 },
    { "Search for Word (hidden)",   ":lua require('telescope.builtin').live_grep({ hidden = true })", 1 },
    { "Search for Word (cwd)",      ":lua require('telescope.builtin').live_grep({ cwd = vim.fn.expand('%:p:h') })", 1 },
    { "Search for Word (project)",  ":lua require('telescope.builtin').live_grep({ cwd = require('telescope.utils').buffer_dir() })", 1 },
    { "Project Files",              ":lua require'utils.telescope.pickers'.project_files()", 1 },
  },
  {"Help",
    { "tips",                       ":help tips" },
    { "cheatsheet",                 ":help index" },
    { "tutorial",                   ":help tutor" },
    { "summary",                    ":help summary" },
    { "quick reference",            ":help quickref" },
    { "search help(F1)",            ":lua require('telescope.builtin').help_tags()", 1 },
  },
  {
    "Git(Hub)",
    { " Branches",                 "<cmd>Telescope git_branches<CR>", 1 },
    { " Repos",                    "lua require'utils.telescope'.repo_list()", 1 },
    { " Issues",                   "lua require'utils.telescope'.gh_issues()", 1 },
    { " Pulls",                    "lua require'utils.telescope'.gh_prs()", 1 },
    { " Status",                   "<cmd>Telescope git_status<CR>", 1 },
    { " Commits",                  "lua require'plugins.telescope.pickers'.my_git_commits()", 1 },
    { " Buffer Commits",           "lua require'plugins.telescope.pickers'.my_git_bcommits()", 1 },
  },
  {
    'Notes',
    { 'Browse Notes', "lua require'utils.telescope'.browse_notes()", 1 },
    { 'Find Notes', "lua require'utils.telescope'.find_notes()", 1 },
    { 'Search/Grep Notes', "lua require'utils.telescope'.grep_notes()", 1 },
  },
  { "Packages",
    { "Mason Update",               ":MasonUpdateAll" },
    { "Open Mason",                 ":Mason" },
    { "Plugins Status",             ":lua require('lazy').home()" },
    { "Plugins Update",             ":lua require('lazy').update()" },
    { "Plugins Sync",               ":lua require('lazy').sync()" },
  },
  {
    "Search",
    { "Edit Dotfiles",              "<cmd>lua require('plugins.telescope.pickers').edit_dotfiles()<CR>", },
    { "Oldfiles",                   "<cmd>Telescope oldfiles hidden=true<CR>",                         },
    { "Built-in Commands",          ":lua require('telescope.builtin').commands()" },
    { "Built-in Command history",   ":lua require('telescope.builtin').command_history()" },
    { "Command History",            "<cmd>lua require('plugins.telescope.pickers').command_history()<CR>",     },
    { "Search History",             "<cmd>Telescope search_history theme=dropdown<CR>",                },
    { "Quickfix",                   "<cmd>Telescope quickfix<CR>",                                     },
    { "Jumps",                      ":lua require('telescope.builtin').jumplist()" },
  },
  { "Servers",
    { "Restart lua-ls",             ":LspRestart lua-ls" },
    { "Restart eslint_d",           ":!eslint_d restart" },
    { "Restart tsserver",           ":LspRestart tsserver" },
  },
  {
    'Toggle',
    { "paste mode",                 ":set paste!" },
    { 'cursor line',                ":set cursorline!" },
    { "cursor column",              ":set cursorcolumn!" },
    { "spell checker",              ":set spell!" },
    { "relative number",            ":set relativenumber!" },
    { "search highlighting",        ":set hlsearch!" },
    { "Colorizer",                  ":ColorToggle" },
  },
  {
    'Neovim',
    { "nvim options",               ":lua require('telescope.builtin').vim_options()" },
    { "checkhealth",                ":checkhealth" },
    { "registers",                  ":lua require('telescope.builtin').registers()" },
    { "keymaps",                    ":lua require('telescope.builtin').keymaps()" },
    { "buffers",                    ":Telescope buffers" },
    { "search history",             ":lua require('telescope.builtin').search_history()" },
    { "Search TODOS",               ":lua require'utils.telescope'.search_todos()" },
    { "Change colorshceme",         ":lua require('telescope.builtin').colorscheme({ enable_preview = true })" },
  },
}

return command_palette
