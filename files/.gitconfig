
; vim: ft=gitconfig

[user]
	useconfigonly = true
	name = Ahmed Abdulrahman
	email = a.kasapbashi@live.com

# use separate file for username / github token / etc
[include]
	path = ~/.gitconfig.local

[gpg]
  program = /usr/local/bin/gpg

[core]
	editor = $EDITOR
	commitGraph = true
	whitespace=fix,space-before-tab,tab-in-indent,trailing-space,cr-at-eol
	; https://git-scm.com/docs/git-update-index#_untracked_cache
	excludesfile = ~/.config/git/.gitignore
  	attributesfile = ~/.config/git/.gitattributes
	untrackedCache = true
	pager = diff-so-fancy | less --tabs=4 -RFX
	; hash (#) conflicts with Markdown when I use hb to open PRs etc...
	commentChar = %

[alias]
	publish="!git push -u origin $(git branch-name)"
	unpublish="!git push origin :$(git branch-name)"
	# branch
	doctor = remote -v show origin
	hide = update-index --assume-unchanged
	unhide = update-index --no-assume-unchanged
	hidden = !git ls-files -v | grep \"^[a-z]\"
	# list
	la = l --all --simplify-by-decoration
	addall = !sh -c 'git add . && git add -u'
	who = shortlog -sne
	# Rename branch name local & remote. Usage: $ git rename old_branch new_branch, and it's done.
	rename = "!change() { git branch -m $1 $2; git push origin :$1; git push --set-upstream origin $2; }; change"
	# list commited files name, Usage: $ git cf <COMMIT_ID>
	cf = "!show_commited_files() { git diff-tree --no-commit-id --name-only -r $1; }; show_commited_files"

	# ------------------------------------------------------------
	# Emoji-Log
	# ------------------------------------------------------------

	# Git Commit, Add all and Push — in one step.
	cap = "!f() { git add .; git commit -m \"$@\"; git push; }; f"

	# NEW.
	new1 = "!f() { git cap \"📦 $@\"; }; f"
	# IMPROVE.
	imp = "!f() { git cap \"👌 $@\"; }; f"
	# FIX.
	fix = "!f() { git cap \"🐛 $@\"; }; f"
	# RELEASE.
	rlz = "!f() { git cap \"🚀 $@\"; }; f"
	# DOC.
	doc = "!f() { git cap \"📖 $@\"; }; f"
	# TEST.
	tst = "!f() { git cap \"✅ $@\"; }; f"

[branch]
  autosetupmerge = always
  autosetuprebase = always

[branch "master"]
  rebase = true

[fetch]
  prune = true
  fsckObjects = true

[pager]
  # insanely beautiful diffs ==> npm install -g diff-so-fancy
  show-branch = true
  status = true
  show = diff-so-fancy | less --tabs=4 -RFXS --pattern '^(Date|added|deleted|modified): '
  diff = diff-so-fancy | less --tabs=4 -RFXS --pattern '^(Date|added|deleted|modified): '

# [interactive]
  # disabled until github.com/so-fancy/diff-so-fancy/pull/172 is resolved :(
	# diffFilter = "diff-so-fancy"

# so much color
[color]
	ui = auto

[color "diff"]
	meta = "#88b0ae"
	frag = magenta bold
	old = red strike
	whitespace = red reverse
	commit = yellow bold

[color "diff-highlight"]
	oldNormal = red strike
	oldHighlight = red strike 52
	newNormal = green italic
	newHighlight = green italic 22

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "status"]
	added = green
	changed = yellow
	untracked = red

# git mergetool
[merge]
  # Include summaries of merged commits in newly created merge commit messages
  log = 1000
  tool = vimdiff
  conflictstyle = diff3

[mergetool]
  trustExitCode = true
  keepBackup = false
  prompt = false

[mergetool "vimdiff"]
  cmd = $EDITOR -d $LOCAL $BASE $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'

# URL shorthands
[url "git@github.com:"]
  insteadOf = "gh:"
  pushInsteadOf = "github:"
  pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
  insteadOf = "github:"

[url "git@gist.github.com:"]
  insteadOf = "gst:"
  pushInsteadOf = "gist:"
  pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
  insteadOf = "gist:"

[url "git@gitlab.com:"]
  insteadOf = gl:
  pushInsteadOf = gitlab:
  pushInsteadOf = git://gitlab.com/

[url "git://gitlab.com/"]
  insteadOf = gitlab:

[url "git@bitbucket.org:"]
  insteadOf = bb:
  pushInsteadOf = bitbucket:
  pushInsteadOf = git://bitbucket.org/

[url "git://bitbucket.org/"]
  insteadOf = bitbucket:

# correct typos
[help]
	autocorrect = 1

# push easily. http://stackoverflow.com/a/23918418/89484
[push]
	default = current
	followTags = true

[pull]
  rebase = true

[fetch]
	prune = true

[rebase]
  autosquash = true
  instructionFormat = [%cn <%ce> %G?] %s
  autoStash = true

[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f

[receive]
  fsckObjects = true

[diff]
	compactionHeuristic = true
	# Show blocks of moved text of at least 20 alphanumeric characters differently than adds/deletes
	# https://blog.github.com/2018-04-05-git-217-released/
	colorMoved = zebra
	# Detect copies as well as renames
	renames = copies
	algorithm = histogram
	tool = vimdiff
	indentHeuristic = true

[difftool]
  prompt = false
  trustExitCode = true

[diff "exif"]
  textconv = exiftool

[diff "plist"]
  textconv = plutil -convert xml1 -o -

[difftool "vimdiff"]
  cmd = $EDITOR -d $LOCAL $REMOTE

[stash]
	showPatch = true

[log]
  decorate = short
  date = local

[status]
  submodulesummary = true
  color = true

[submodule]
  recurse = true

[tag]
  forceSignAnnotated = true

[apply]
  whitespace = nowarn

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[protocol]
  version = 2 # Added in Git 2.18.0.

[protocol "keybase"]
  allow = always

[diff-so-fancy]
  first-run = false
