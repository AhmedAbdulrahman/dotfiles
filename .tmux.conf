# ── General settings ──────────────────────────────────────────────────────────

# Set a new keybinding to C-Space {{{
# unbind system defined prefix
  unbind C-b
  set -g prefix C-Space
# }}}

# dont mess up with other ctrl-a options by pressing ctrl-a twice
bind C-a send-prefix

# Bindings, to see current bindings:
# tmux list-keys

# enable vi mode
setw -g mode-keys vi

# Automatically renumber window numbers on closing a pane (tmux >= 1.7).
set -g renumber-windows on
setw -g aggressive-resize on

# Highlight active window.
setw -g window-status-current-bg red

# Mouse can be used to select panes, select windows (by clicking on the status
# bar), resize panes. For default bindings see `tmux list-keys`.
set -g mouse on

# Increase scrollback history
set-option -g history-limit 500000 

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Don't wait for an escape sequence after seeing C-Space, improves vim responsiveness.
set-option -sg escape-time 0

# Start window and pane numbering at 1, (0 is too hard to reach).
set -g base-index 1
set -g pane-base-index 1

# Make the current window the first window
bind T swap-window -t 1

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string '#T : #h ❐ #S ● #I #W'

# But don't change tmux's own window titles.
setw -g automatic-rename on # rename window to reflect current program

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set -g focus-events on

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# Turn off distracting border highlight: the background highlighting is probably
# enough. Default value of 8 comes from "pane-border-fg" in tmux's
# options-table.c.
set -g pane-active-border-fg 8

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# set zsh as default shell
set -g default-command /bin/zsh
set -g default-shell /bin/zsh

# visual notification of activity in other windows {{{
  setw -g monitor-activity on
  set -g visual-activity on
# }}}

# ── Pane settings ───────────────────────────────────────────────────────────

# create session
bind C-c new-session

# switch between sessions {{{
  bind -r ( switch-client -p
  bind -r ) switch-client -n
# }}}

# Vim style pane selection  {{{
  unbind h
  bind h select-pane -L
  unbind j
  bind j select-pane -D
  unbind k
  bind k select-pane -U
  unbind l # normally used for last-window
  bind l select-pane -R
# }}}

# Use Alt-vim keys without prefix key to switch panes {{{
  bind -n M-h select-pane -L
  bind -n M-j select-pane -D 
  bind -n M-k select-pane -U
  bind -n M-l select-pane -R
# }}}

# Have new windows and panes open in the current directory
bind '"' split-window -c '#{pane_current_path}'
bind %   split-window -c '#{pane_current_path}' -h
bind c   new-window   -c '#{pane_current_path}'
bind-key N run-shell 'TMUX= tmux new-session -d \; switch-client -n' 
bind-key C run-shell 'TMUX= tmux new-session -t $(tmux display-message -p #S) -s $(tmux display-message -p #S-clone) -d \; switch-client -n \; display-message "session #S cloned"' 


# Vim-like key bindings for pane navigation (default uses cursor keys) {{{
  bind -n M-Left select-pane -L
  bind -n M-Right select-pane -R
  bind -n M-Up select-pane -U
  bind -n M-Down select-pane -D
# }}}

# Pane resizing (mouse also works) {{{
  unbind Left
  bind -r Left resize-pane -L 5
  unbind Right
  bind -r Right resize-pane -R 5
  unbind Down
  bind -r Down resize-pane -D 5
  unbind Up
  bind -r Up resize-pane -U 5
# }}}

# toggle pane full screen {{{
  bind-key Z resize-pane -Z    
#}}}

# Switch between Previous and Next Windows using Shift arrow {{{
  bind -n S-Left  previous-window
  bind -n S-Right next-window
# }}}

# Intuitive window-splitting keys  {{{
  bind | split-window -h -c '#{pane_current_path}' # normally prefix-%
  bind \ split-window -h -c '#{pane_current_path}' # normally prefix-%
  bind - split-window -v -c '#{pane_current_path}' # normally prefix-"
# }}}

# to cycle through windows
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind b previous-window

# Set default term to xterm
set -g default-terminal xterm-256color

# recording  program output to a log
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

# don't allow tmux to rename the window based on commands running
set-window-option -g allow-rename off
#
set -g lock-after-time 300
set -g lock-command "cmatrix -s"

# include status line powerline theme
# status bar theme
set -g status-bg 'colour235'
set -g message-command-fg 'colour222'
set -g status-justify 'centre'
set -g status-left-length '100'
set -g status 'on'
# set -g pane-active-border-fg 'colour154'
set -g message-bg 'colour238'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g message-fg 'colour222'
set -g message-command-bg 'colour238'
set -g status-attr 'none'
set -q -g status-utf8 'on'
set -g pane-border-fg 'colour238'
set -g status-left-attr 'none'
set -g window-status-fg 'colour121'
set -g window-status-attr 'none'
set -g window-status-activity-bg 'colour235'
set -g window-status-activity-attr 'none'
set -g window-status-activity-fg 'colour154'
set -g window-status-separator ''
set -g window-status-bg 'colour235'
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] #(whoami)  #(uptime  | cut -d " " -f 1,2,3) #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %r  %a  %Y #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #H #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #(rainbarf --battery --remaining --no-rgb) '
set -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
set -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I  #W  #F #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'

# Make sure we always start at 1, even when invoked from a .tmux wrapper script.
set-environment -g SHLVL 1

# Clipper.
bind-key y run-shell "tmux save-buffer - | nc -U ~/.clipper.sock"

# Analagous with naked C-l which resets/clears the terminal.
bind-key C-l clear-history

# Edit tmux.conf in default $EDITOR
bind e new-window -n '~/.tmux.conf' "zsh -c '\${EDITOR:-nvim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# source tmux.conf {{{
  unbind r
  bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'
# }}}

# Tmux plugins {{{
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @plugin "tmux-plugins/tmux-yank"
set -g @plugin "tmux-plugins/tmux-copycat"
set -g @plugin "tmux-plugins/tmux-open"
set -g @plugin "tmux-plugins/tmux-pain-control"
set -g @plugin "christoomey/vim-tmux-navigator"
set -g @plugin "tmux-plugins/tmux-sessionist"
set -g @plugin "alexanderjeurissen/tmux-pomodoro"
set -g @plugin "alexanderjeurissen/tmux-world-clock"
set -g @plugin "alexanderjeurissen/sombre.tmux"
set -g @plugin "tmux-plugins/tmux-online-status"
set -g @plugin "alexanderjeurissen/tmux-process-indicator"

# Check if tmux plugin manager is installed, otherwise clone it.
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
